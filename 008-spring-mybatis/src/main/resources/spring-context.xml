<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        导入数据库连接信息
        FALLBACK:当配置文件中的key与windows中的某些key冲突时，以配置文件内的key为准
    -->
    <context:property-placeholder location="db.properties" system-properties-mode="FALLBACK"/>

    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!--将mybatis交给spring容器管理【产生SessionFactory】-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--读取mybatis配置文件-->
        <property name="configLocation" value="mybatis-config.xml"/>
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--扫描Mapper,创建对应的代理类（即接口实现类）-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描mapper包-->
        <property name="basePackage" value="com.chuanqihou.stu.mapper"/>
        <!--SqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>

    <!--产生userService对象-->
    <bean id="userService" class="com.chuanqihou.stu.service.impl.UserServiceImpl" autowire="byType"/>

</beans>